openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
   Dokumentasi API untuk GIS Chapter 5 dari Cloud function
  termsOfService: https://github.com/1214005gis5
  contact:
    email: rafiazhim.ra@gmail.com
  license:
    name: gcfbackend1214005 Package
    url: https://pkg.go.dev/github.com/raffzhm/gcfbackend1214005
  version: 0.1.0
externalDocs:
  description: Swagger
  url: https://1214005gis5.github.io/swagger
servers:
  - url: https://asia-southeast2-argon-fire-401902.cloudfunctions.net/
tags:
  - name: auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/raffzhm/gcfbackend1214005
  - name: register
    description: Register Account
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/raffzhm/gcfbackend1214005
  - name: data
    description: Data Geo Spasial
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/raffzhm/gcfbackend1214005
paths:
  /putDataGeo:
    put:
      tags:
        - data
      summary: Update Data Geo
      description: Update data nama by volume 
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reqput'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resput'
        '405':
          description: Invalid input
      security:
        - Token:
          - write:apiKey
          - read:apiKey
  /delDataGeo:
    delete:
      tags:
        - data
      summary: Delete Data Geo
      description: Delete Data Geo by nama
      operationId: DeleteData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqDelData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResDelData'
        '400':
          description: Invalid status value
      security:
        - Token:
          - write:apiKey
          - read:apiKey
  /postGIS4:
    post:
      tags:
        - data
      summary: Insert Data Geo
      description: Inser data
      operationId: postGeoJSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseInsert'
        '405':
          description: Invalid input          
      security:
        - Token:
          - write:apiKey
          - read:apiKey
  /fetchGeoJson:
    get:
      tags:
        - data
      summary: Get Data Geospasial
      description: List Data Geospasial
      operationId: getGeoJSON
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseDataGeo'
        '400':
          description: Invalid status value
      security:
        - Token:
          - write:apiKey
          - read:apiKey      
  /loginGISChapter5:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - Token:
            - write:apiKey
            - read:apiKey
  /regisGISChpater5:
    post:
      tags:
        - register
      summary: Register User
      description: Daftar Akun User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example : edumas1
        password:
          type: string
          example: 4321234
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    responseUser:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          type: object
          properties:
            username:
              type: string
              example: edumas1
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: user
    ResponseInsert:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input Data
    InsertData:
      type: object
      properties:
        type:
          type: string
          example: Point
        name:
          type: string
          example: rawr
        volume:
          type: string
          example: 123123
    ResponseDataGeo:
      type: object
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type: 
              type: string
            coordinates: 
              type: array
        properties:
          type: object
          properties:
            name:
              type: string
    Reqput:
      type: object
      properties:
        type:
          type: string
          example: Point
        name:
          type: string
          example: rawr 
        volume:
          type: string
          example: 234242
    Resput:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Update Data
    ReqDelData:
      type: object
      properties:
        type:
          type: string
          example: Point
        name:
          type: string
          example: rawr 
        volume:
          type: string
          example: 234242
    ResDelData:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: "Berhasil menghapus data. Jumlah data terhapus:"
    Auth:
      type: object
      properties:
        username:
          type: string
          example: edumas1
        password:
          type: string
          example: 4321234
    bodycord:
      type: object
      properties:
        type:
          type: string
          example: polygon
        name:
          type: string
          example: rumah
        volume:
          type: string
          example: "1"
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: tokennya
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Token:
      type: apiKey
      name: Login
      in: header
